#ubuntu_default_image_name: "ubuntu_18_04_64_20G_alibase_20181212.vhd"
ansible_environment: beta
ansible_product: vortex
count: 1
allocate_public_ip: yes

###############################

cloud_bootstrap:

  servers:

    vortex_kube_09:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.118"
        gw: "185.40.28.113"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-09-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_backend_node
        # DATABASE
            - postgres-pgpool-cluster
            - postgres-pgmanager-cluster
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - database-bind-shared-volume
            - database-bind-glusterfs-storage
        # LOGGING CLUSTER
            - logging-elasticsearch-cluster
        # CLUSTER SERVICE
            - swarm-cluster
            - swarm-clients
        # SERVICES
            - metabase
        # SERVICE DISCOVERY
            - consul-client
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            # PGCLUSTER
            pgcluster_node_index: "2"
            pgcluster_node_name: pg03
            psql_init_node_type: slave
            psql_init_node_id: "3"
            pg_node_master_name: pg01
            #
            glusterfs_replica_count: "3"
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "worker"
            second_network_type: "cde"
            second_network_zone: "cluster"
            second_network_cluster_group: "database-backend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            green_ip: "172.16.50.154"
            green_subnet: "172.16.50.0/24"
            second_ip: "10.32.10.9" 
            second_network_subnet: "10.32.10.0/19"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    vortex_kube_08:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.93"
        gw: "185.40.28.81"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-08-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_backend_node
        # DATABASE
            - postgres-pgpool-cluster
            - postgres-pgmanager-cluster
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - database-bind-shared-volume
            - database-bind-glusterfs-storage
        # LOGGING CLUSTER
            - logging-elasticsearch-cluster
        # CLUSTER SERVICE
            - swarm-cluster
            - swarm-clients
        # SERVICES
            - metabase
        # SERVICE DISCOVERY
            - consul-client
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            # PGCLUSTER
            pgcluster_node_index: "1"
            pgcluster_node_name: pg02
            psql_init_node_type: slave
            psql_init_node_id: "2"
            pg_node_master_name: pg01
            #
            glusterfs_replica_count: "3"
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "worker"
            second_network_type: "cde"
            second_network_zone: "cluster"
            second_network_cluster_group: "database-backend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            green_ip: "172.16.50.209"
            green_subnet: "172.16.50.0/24"
            second_ip: "10.32.10.8" 
            second_network_subnet: "10.32.10.0/19"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    vortex_kube_07:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.92"
        gw: "185.40.28.81"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-07-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_backend_node
        # DATABASE
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - database-bind-shared-volume
            - database-bind-glusterfs-storage
        # LOGGING CLUSTER
            - logging-elasticsearch-cluster
        # CLUSTER SERVICE
            - swarm-cluster
            - swarm-clients
        # SERVICES
            - metabase
        # SERVICE DISCOVERY
            - consul-client
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            # PGCLUSTER
            pgcluster_node_index: "0"
            pgcluster_node_name: pg01
            psql_init_node_type: master
            psql_init_node_id: "1"
            pg_node_master_name: pg01
            #
            glusterfs_replica_count: "3"
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "worker"
            second_network_type: "cde"
            second_network_zone: "cluster"
            second_network_cluster_group: "database-backend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            second_ip: "10.32.10.7" 
            second_network_subnet: "10.32.10.0/19"
            green_ip: "172.16.50.208"
            green_subnet: "172.16.50.0/24"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    vortex_kube_06:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.91"
        gw: "185.40.28.81"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-06-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_network_balancer
        # LOCAL REPO
            - clamav-repository-mirror
            - apt-repository-mirror
            - build-repository-mirror
            - py-repository-mirror
            - linux-repository-mirror
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
            - wazuh-manager
        # STORAGE
            - master-bind-master-backend
            - storage-master-glusterfs
            - wazuh-elasticsearch
        # NETWORK
            - network-balancer-stack
        # PLACEHOLDERS GROUPS
            - teamcity-agent
        # MONITORING
            - grafana
            - prometheus
            - alertmanager
            - wazuh-kibana
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-master
        ansible_inventory_vars:
            # NETWORK DATA
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "network-balancer"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            green_ip: "172.16.50.207"
            green_subnet: "172.16.50.0/24"
            second_ip: "10.32.6.1" 
            second_network_subnet: "10.32.6.0/19"
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            # LOAD BALANCER SETTINGS
            #lb_router_priority: "80"
            lb_router_priority: "100"
            lb_router_role: "BACKUP"
            lb_advert_int: "1"
            lb_notification_email_from: "vortex-node-06-production@vortex.com"
            lb_lvs_id: "vortex-node-06-production"
            lb_interface_01: "enp0s17"
            lb_interface_02: "enp0s8"
            # K8S SETTINGS
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            # SHARED STORAGE
            glusterfs_replica_count: "3"
            # CLUSTERS SETTINGS
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "master"
            # ANSIBLE SETTINGS
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
            ansible_python_interpreter: "/usr/bin/python3"
            # CLAMAV SETTINGS
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            # APT MIRROR SYNC OPTIONS
            apt_mirror_startup_hour: "3"
            apt_mirror_startup_minutes: "05"

    vortex_kube_05:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.115"
        gw: "185.40.28.113"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-05-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_network_balancer
        # LOCAL REPO
            - clamav-repository-mirror
            - apt-repository-mirror
            - build-repository-mirror
            - py-repository-mirror
            - linux-repository-mirror
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
            - wazuh-manager
        # STORAGE
            - master-bind-master-backend
            - storage-master-glusterfs
            - wazuh-elasticsearch
        # NETWORK
            - network-balancer-stack
        # PLACEHOLDERS GROUPS
            - teamcity-agent
        # MONITORING
            - grafana
            - prometheus
            - alertmanager
            - wazuh-kibana
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-master
        ansible_inventory_vars:
            # NETWORK DATA
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "network-balancer"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            green_ip: "172.16.50.206"
            green_subnet: "172.16.50.0/24"
            second_ip: "10.32.5.1" 
            second_network_subnet: "10.32.0.0/16"
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            # LOAD BALANCER SETTINGS
            #lb_router_priority: "80"
            lb_router_priority: "150"
            lb_router_role: "MASTER"
            lb_advert_int: "1"
            lb_notification_email_from: "vortex-node-05-production@vortex.com"
            lb_lvs_id: "vortex-node-05-production"
            lb_interface_01: "enp0s17"
            lb_interface_02: "enp0s8"
            # K8S SETTINGS
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            # SHARED STORAGE
            glusterfs_replica_count: "3"
            # CLUSTERS SETTINGS
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "master"
            # ANSIBLE SETTINGS
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
            ansible_python_interpreter: "/usr/bin/python3"
            # CLAMAV SETTINGS
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            # APT MIRROR SYNC OPTIONS
            apt_mirror_startup_hour: "3"
            apt_mirror_startup_minutes: "05"

    vortex_kube_04:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.126"
        gw: "185.40.28.113"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-04-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_network_balancer
        # LOCAL REPO
            - clamav-repository-mirror
            - apt-repository-mirror
            - build-repository-mirror
            - py-repository-mirror
            - linux-repository-mirror
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - master-bind-master-backend
            - bind-master-glusterfs
            - wazuh-elasticsearch
        # LOGGING WEB VIEW
            - logging-kibana-service
        # NETWORK
            - network-balancer-stack
        # SERVICE DISCOVERY
            - consul-clients
            - consul-cluster
        # TEAMCITY CI
            - teamcity-server
            - teamcity-agent
        # MONITORING
            - grafana
            - prometheus
            - alertmanager
            - wazuh-kibana
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-master
        ansible_inventory_vars:
            # NETWORK DATA
            ## SUBNETS
            green_subnet: "172.16.50.0/24"
            second_network_subnet: "10.32.4.0/19"

            ## G/B
            green_ip: "172.16.50.205"
            second_ip: "10.32.4.1"
            ## Ifaces
            second_iface: "enp0s8"
            ## Zones
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "network-balancer"
            second_network: "REPLACED"
            ## Public Nat / private Nat. <>
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            ## LOAD BALANCER SETTINGS
            lb_router_priority: "50"
            lb_router_role: "BACKUP"
            lb_advert_int: "1"
            lb_notification_email_from: "vortex-node-04-production@vortex.com"
            lb_lvs_id: "vortex-node-04-production"
            lb_interface_01: "enp0s17"
            lb_interface_02: "enp0s8"
            # K8S SETTINGS
            #node_labels: '{"openstack-control-plane":"enabled", "openvswitch":"enabled"}'
            #node_labels: '{"openstack-compute-node":"enabled", "openvswitch":"enabled"}'
            # SHARED STORAGE
            glusterfs_replica_count: "3"
            # CLUSTERS SETTINGS
            swarm_node_type: "client"
            consul_type: "client"
            kubernetes_type: "master"
            # ANSIBLE SETTINGS
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
            ansible_python_interpreter: "/usr/bin/python3"
            # CLAMAV SETTINGS
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"            
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            # APT MIRROR SYNC OPTIONS
            apt_mirror_startup_hour: "3"
            apt_mirror_startup_minutes: "05"

    vortex_kube_03:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.94"
        gw: "185.40.28.81"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-03-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_frontend
        # DATABASE
            - postgres-pgpool-cluster
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - cloud-bind-frontend-dns
            - cloud-bind-glusterfs-storage
        # CLUSTER SERVICE
            - swarm-cluster
        # WEB
            - nginx-frontend
        # SERVICES
            - settings
            - core
            - business
            - guard
            - demo
            - metabase
            - docs
        # SERVICE DISCOVERY
            - consul-masters
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            glusterfs_replica_count: "3"
            cloud_ns_name: "ns3-cloud"
            swarm_node_type: "master"
            consul_type: "master"
            kubernetes_type: "worker"
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "nginx-frontend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            second_ip: "10.32.3.1" 
            second_network_subnet: "10.32.3.0/19"
            green_ip: "172.16.50.202"
            green_subnet: "172.16.50.0/24"
            ids_server: "true"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    vortex_kube_02:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.121"
        gw: "185.40.28.113"
        #
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-02-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_frontend
        # DATABASE
            - postgres-pgpool-cluster
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # STORAGE
            - cloud-bind-frontend-dns
            - cloud-bind-glusterfs-storage
        # CLUSTER SERVICE
            - swarm-cluster
        # WEB
            - nginx-frontend
        # SERVICES
            - settings
            - core
            - business
            - guard
            - demo
            - metabase
            - docs
        # SERVICE DISCOVERY
            - consul-masters
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            glusterfs_replica_count: "3"
            cloud_ns_name: "ns2-cloud"
            swarm_node_type: "master"
            consul_type: "master"
            kubernetes_type: "worker"
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "nginx-frontend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            second_ip: "10.32.2.1" 
            second_network_subnet: "10.32.2.0/19"
            green_ip: "172.16.50.201"
            green_subnet: "172.16.50.0/24"
            ids_server: "true"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    vortex_kube_01:
        # Replaced after VMs bootstrapped in anycloud
        network: "REPLACED"
        ip: "185.40.28.83"
        gw: "185.40.28.81"
        template_image_name: "{{ ubuntu_default_image_name }}"
        name: "vortex-node-01-production"
        anycloud_vm_configuration: "{{ extended_instance_type }}"
        initial_only_dns_servers:
            - "8.8.8.8"
        ansible_inventory_groups:
        # MAIN
            - vlan_all
            - vlan_frontend
        # DATABASE
            - postgres-pgpool-cluster
            - postgres-pgmanager-cluster
            - postgres-pgcontrol-cluster
        # MONITORING
            - cadvisor-service
            - node-exporter
        # SECURITY
            - wazuh-agent
        # PLACEHOLDERS GROUPS
            - gitlab-server
        # STORAGE
            - cloud-bind-frontend-dns
            - cloud-bind-glusterfs-storage
        # CLUSTER SERVICE
            - swarm-cluster
        # WEB
            - nginx-frontend
        # SERVICES
            - settings
            - core
            - business
            - guard
            - demo
            - metabase
            - docs
        # SERVICE DISCOVERY
            - consul-masters
            - consul-cluster
        # ACCESS SERVICES
            - pritunl-stack
        # KUBERNETES CLUSTER
            - kubernetes-cluster
            - kubernetes-worker
        ansible_inventory_vars:
            public_nat_ip: "REPLACED"
            public_nat_gw: "REPLACED"
            glusterfs_replica_count: "3"
            cloud_ns_name: "ns1-cloud"
            swarm_node_type: "master"
            consul_type: "master"
            kubernetes_type: "worker"
            second_network_type: "dmz"
            second_network_zone: "cluster"
            second_network_cluster_group: "nginx-frontend"
            second_network: "REPLACED"
            second_iface: "enp0s8"
            green_ip: "172.16.50.200"
            green_subnet: "172.16.50.0/24"
            second_ip: "10.32.16.1" 
            second_network_subnet: "10.32.16.0/19"
            ansible_python_interpreter: "/usr/bin/python3"
            clamav_startup_hour: "3"
            clamav_startup_minutes: "30"
            clamav_mirror_update_hour: "2"
            clamav_mirror_update_minutes: "30"
            apt_mirror_startup_minutes: "05"
            apt_mirror_startup_hour: "3"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  basic_roles:

    - '!_bootstrap/update-dns-config'
    - '!_bootstrap/ntp-client'
    - '!_bootstrap/local-repository'
    - auditd
    - rsyslog
    - ossim-agent

  services:
    inventory_groups_vars:
        test-sentry-redis-io-cluster:
                redis_public_port: 6379
                redis_slave_public_port: 6380
                redis_username: redis
                redis_passowrd: dc1d494f7915da973d6c037357c548adbaee349e35

  switches:
    vswitch_01:
        vswitch_name: "{{ vswitch_name }}"
        anycloud_zone: "{{ anycloud_zone }}"
        vswitch_description: "{{ vswitch_description}} "
        anycloud_region: "{{ anycloud_region }}"
        vswitch_cidr: '{{ vswitch_cidr }}'
        vswitch_id: "REPLACED"

  vpc_zones:
    vpc_0001:
        vpc_name: "{{ vpc_name }}"
        anycloud_region: "{{ anycloud_region }}"
        vpc_description: "{{ vpc_description }}"
        cidr_block: "{{ vpc_cidr }}"

  security_zones:
    sg_zone_0001:
        sg_group_id: "REPLACED"

ssh_connect_type_self: ""
ssh_connect_type_via: "ansible_ssh_common_args='-o ProxyCommand=\"ssh -W %h:%p %r@10.110.0.250\"'"

anycloud_template_name: "vortex-preprod-template-02"

anycloud_domain: "vortex.com"

anycloud_dc: "Linx-MSK-M8-6-16"

dns_servers:
   - 8.8.8.8
   - 1.1.1.1