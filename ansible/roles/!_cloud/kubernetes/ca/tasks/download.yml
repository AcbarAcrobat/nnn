
#   make_apiserver_certs.sh.j2

# if ! [[ -f "ca.pem" ]]; then
# 	cfssl gencert -initca ca-csr.json | cfssljson -bare ca
# 	rm "ca.csr"
# fi

# - name: Download cfssl Unix
#   get_url:
#     url: "{{ item }}"
#     dest: "{{ ca_service_settings.directories.source }}"
#   with_items: "{{ ca_service_settings.pkg_links }}"

- name: Download cfssl Unix
  shell: |
      curl -o {{ ca_service_settings.directories.source }}/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
      curl -o {{ ca_service_settings.directories.source }}/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
      chmod +x {{ ca_service_settings.directories.source }}cfssl*
  when: inventory_hostname in groups['kubernetes-master'][0]

# - name: Set execute flag to binaries
#   shell: chmod +x {{ ca_service_settings.directories.source }}/cfssl*

- name: Local copy from source
  shell: "cp {{ ca_service_settings.directories.source }}/{{ item }} /usr/local/bin/{{ item }}"
  with_items: "{{ ca_service_settings.app_links }}"
  ignore_errors: true
  when: inventory_hostname in groups['kubernetes-master'][0]

- name: Local copy from source to local ca bin
  shell: "cp {{ ca_service_settings.directories.source }}/{{ item }} {{ ca_service_settings.directories.bin }}{{ item }}"
  with_items: "{{ ca_service_settings.app_links }}"
  ignore_errors: true
  when: inventory_hostname in groups['kubernetes-master'][0]
