# - name: build list of admin user names
#   set_fact: 
#     admin_list: |
#       {% for item in cloud_bootstrap.servers | dict2items %}
#       {{ item }},
#       {% endfor %}


# - debug: 
#     msg: "{{ cloud_bootstrap.servers.keys() }}"

- name: Check an ECS instance VMs on Group alive and current
  ali_instance:
    security_groups: "{{ createsgeresult.group.group_id }}"
    alicloud_region: "eu-west-1"
    image: '{{ image_id }}'
    type: '{{ item.value.alicloud_vm_configuration }}'
    instance_name: '{{  item.value.name }}'
    description: '{{  item.value.name }}'
    host_name: '{{  item.value.name }}'
    password: '{{ alicloud_vm_access_pass }}'
    count: '{{ count }}'
    internet_charge_type: "PayByTraffic"
    instance_charge_type: "PostPaid"
    allocate_public_ip: 'true'
    max_bandwidth_in: 10
    max_bandwidth_out: 10
    vswitch_id: '{{ vswitch_id }}'
    alicloud_secret_key: "{{ alicloud_secret_key }}"
    alicloud_access_key: "{{ alicloud_access_key }}"
  register: create_instance_result
  with_dict: "{{ cloud_bootstrap.servers }}"

- debug: var=create_instance_result

- name: debug
  debug: "{{ key }}"
  with_dict: create_instance_result.results

- name: Get all VMs on Group
  ali_instance_facts:
    instance_names: 
          - "{{ item.value.name }}"
    alicloud_secret_key: "{{ alicloud_secret_key }}"
    alicloud_access_key: "{{ alicloud_access_key }}"
    alicloud_region: "eu-west-1"
  register: instances_by_ids_{{ item.value.name }}
  with_dict: "{{ cloud_bootstrap.servers }}"

- name: Debug facts
  debug: 
    msg: "{{ instances_by_ids_{{ item.value.name }} }}"
  with_dict: "{{ cloud_bootstrap.servers }}"


- name: Debug facts

  debug: 
    msg: |
      "{% for dict_item in instances_by_ids_{{ item.value.name }} %}{% for k,v in dict_item.items() %}{% if k == 'instances' %}
      {{ v | safe }}
      {% endif %}{% endfor %}
      {% endfor %}"
  with_dict: "{{ cloud_bootstrap.servers }}"

- name: Debug facts
  debug: 
    msg: |
      "{% for dict_item in instances_by_ids.results %}{% for key,value in dict_item.items() %}{% if key == 'instances' %}
      {% if value.network_interfaces %}
            {{ value | safe }}
      {% endif %}
      {% endif %}{% endfor %}
      {% endfor %}"

   #   admin_list: "{{ admin_accounts | selectattr('state', 'equalto', 'present') | map(attribute='name') | join(', ') }}"


# - name: Replace in file public ip