version: '3.7'

networks:
  default:
    driver: overlay
    attachable: true
{% for item in PCI_NETWORKS_LIST %}
  {{ item.network }}:
    driver: overlay
    attachable: true
{% endfor %}


volumes:
  postgres-data:
    driver: local
  business-gems:
    driver: local
  business-docs-gems:
    driver: local
  core-gems:
    driver: local
  settings-gems:
    driver: local
  guard-gems:
    driver: local

services:
{% for key,value in all_services_remap_docker_compose_generate.items() %}{% for app,data in all_services_settings_map.items()%}{% if key == app %}
  {{ key }}:
      image: {{ ANSIBLE_REGISTRY_URL }}/{{ ansible_git_project_path }}/{{ value['image'] }}:{{ lookup('vars', 'passed_ci_docker_tag_' + app) }}
{% if value['command'] is defined %}
      command: {% raw %}"{% endraw %}{{ value['command'] }}{% raw %}"
{% endraw %}
{% endif %}
{% if value['volumes'] is defined %}
      volumes: 
{% for volume in value['volumes'] %}
        - {{ volume | join }}
{% endfor %}
{% endif %}
{% if value['environment'] is defined %}
      environment:
{% for de in value['environment'] %}
        {{ de | join }}
{% endfor %}
{% endif %}
{% if value['depends_on'] is defined %}
      depends_on: 
{% for depend in value['depends_on'] %}
        - {{ depend | join }}
{% endfor %}
{% endif %}
{% if value['ports'] is defined %}
      ports: 
        - {{ value['ports'] }}
{% endif %}
{% if value['entrypoint'] is defined %}
      entrypoint: {{ value['entrypoint'] }}
{% endif %}
{% if data is defined %}
      environment: 
        SERVICE_VERSION: {{ lookup('vars', 'passed_ci_docker_tag_' + app) }}
{% for d in data %}
        {{ d | join }}
{% endfor %}
{% endif %}
      logging:
        driver: syslog
        options:
          tag: "docker_{{ ansible_environment }}-{{ key }}"
{% if value['scale'] is defined %}
      deploy:
        mode: replicated
        replicas: {{ value['scale'] }}
        placement:
          constraints:
            - node.role == manager
#WIP_to branch
        update_config:
          parallelism: 2
          delay: 60s
        restart_policy:
          condition: on-failure


update --update-delay=3s

        #mode: {{ value['mode'] }}
        #endpoint_mode: {{ value['endpoint_mode'] }}
        #update_config:
          #parallelism: 1
          #delay: 50s
          #order: {{ value['order'] }}
          {{ value['order'] }}
        rollback_monitor



{% endif %}{% endif %}{% endfor %}

{% endfor %}