<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="f4efc4dc-4f08-4719-9838-405177dd8cff" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>3: DEPLOY | Publication to Infrastructure</name>
  <description />
  <settings ref="AnsibleDeployTemplate">
    <options>
      <option name="artifactRules" value="ansible_docker_build_result.zip!** =&gt; ./.local/" />
      <option name="maximumNumberOfBuilds" value="0" />
    </options>
    <disabled-settings>
      <setting-ref ref="BUILD_EXT_3" />
      <setting-ref ref="BUILD_EXT_5" />
    </disabled-settings>
    <parameters>
      <param name="ANSIBLE_APPLICATION_TYPE" value="" />
      <param name="ANSIBLE_BUILD_ID" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAME" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAMESPACE" value="" />
      <param name="ANSIBLE_CLOUD_TYPE" value="" />
      <param name="ANSIBLE_COMMIT_SHA" value="" />
      <param name="ANSIBLE_DEPLOY_USERNAME" value="" />
      <param name="ANSIBLE_ENVIRONMENT" value="" />
      <param name="ANSIBLE_PRODUCT_NAME" value="" />
      <param name="ANSIBLE_REGISTRY_URL" value="" />
      <param name="ANSIBLE_REGISTRY_USERNAME" value="" />
      <param name="ANSIBLE_RUN_TYPE" value="" />
      <param name="ANSIBLE_TRIGGER_TOKEN" value="" />
      <param name="ANSIBLE_VERSION" value="" />
      <param name="RunningOfferForPublish" value="" />
      <param name="RunningOnlyQA" value="" />
      <param name="env.ANSIBLE_ENVIRONMENT" value="%ANSIBLE_ENVIRONMENT%" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Publication to Infrastructure" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[ls -la ./

. ./ci_version.sh

mkdir ./.local/

mv ./current_tags.yml ./.local/
mv ./ci_version.yml ./.local/
mv ./ci_version.sh ./.local/
mv ./ci_vault.sh ./.local/
mv ./id_rsa ./.local/
mv ./id_rsa.pub ./.local/
mv ./pass.yml ./.local/
mv ./vault-password-file-tmp.yml ./.local/
mv ./vault-password-file.yml ./.local/
mv ./vault_pass.yml ./.local/

cat ./.local/current_tags.yml

echo "Docker Login:"

docker login "%ANSIBLE_REGISTRY_URL%" -u "%ANSIBLE_REGISTRY_USERNAME%" -p "%ANSIBLE_TRIGGER_TOKEN%"

echo "Docker login complete"

echo "Change dir to ansible"
cd ./ansible
echo "Show contents of parent .local folder"
ls -la ../.local

A_DEPLOY_PASSWORD=`cat ../.local/pass.yml`
A_VAULT_PASSWORD=`cat ../.local/vault_pass.yml`

RUNNING_ONLY_QA="%RunningOnlyQA%"

echo "RUNNING_ONLY_QA is $RUNNING_ONLY_QA"

if [ "$RUNNING_ONLY_QA" = true ]; then

  echo "RUNNING_ONLY_QA is true"

else

    echo "RUNNING_ONLY_QA is false"

    RUNNING_DISABLE_PUBLISH="%RunningOfferForPublish%"

    echo "RUNNING_DISABLE_PUBLISH is $RUNNING_DISABLE_PUBLISH"

    if [ "$RUNNING_DISABLE_PUBLISH" = true ]; then
    
      echo "RUNNING_DISABLE_PUBLISH is true"

    else
    
      echo "RUNNING_DISABLE_PUBLISH is false"
      
      # echo "DEBUG:"
      # echo "ANSIBLE_DEPLOY_USERNAME: $ANSIBLE_DEPLOY_USERNAME"
      # echo "A_DEPLOY_PASSWORD: $A_DEPLOY_PASSWORD"

      ./scripts/wrappers/pipeline/!_all_services_deployer.sh "$ANSIBLE_ENVIRONMENT" "$ANSIBLE_PRODUCT_NAME" "$ANSIBLE_DEPLOY_USERNAME" "$A_DEPLOY_PASSWORD" "$ANSIBLE_APPLICATION_TYPE" "$ANSIBLE_RUN_TYPE" "$ANSIBLE_CLOUD_TYPE" "$A_VAULT_PASSWORD" "$ANSIBLE_REGISTRY_URL" "$ANSIBLE_CI_PROJECT_NAME" "$ANSIBLE_CI_PROJECT_NAMESPACE" "$ANSIBLE_CI_VERSION" "$A_ENV_SECURITY"

    fi

fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings />
    <requirements />
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_5" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="fatal:" />
          <param name="buildFailureOnMessage.outputText" value="Stopped on fatal" />
          <param name="buildFailureOnMessage.reverse" value="false" />
          <param name="buildFailureOnMessage.stopBuildOnFailure" value="true" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_6" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="AnsibleUndefinedVariable" />
          <param name="buildFailureOnMessage.outputText" value="Undefined variable in Ansible" />
          <param name="buildFailureOnMessage.reverse" value="false" />
          <param name="buildFailureOnMessage.stopBuildOnFailure" value="true" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_7" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="MODULE FAILURE" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_1" sourceBuildTypeId="vortex_Main" cleanDestination="false">
        <revisionRule name="sameChainOrLastFinished" revision="latest.sameChainOrLastFinished" />
        <artifact sourcePath="ansible_docker_build_result.zip!** =&gt; ./ " />
      </dependency>
    </artifact-dependencies>
    <cleanup />
  </settings>
</build-type>

